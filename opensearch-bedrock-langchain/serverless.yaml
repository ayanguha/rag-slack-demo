service: aoss-bedrock-rag-handler

provider:
  name: aws
  runtime: python3.12
  region: ap-southeast-2
  stage: ${opt:stage, "dev"}
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 60 # optional, in seconds, default is 6

plugins:
  - serverless-python-requirements

custom:
  topicName: rag-example
  pythonRequirements:
    dockerizePip: true

package:
  individually: true
  include:
    - "rag.py"
  exclude:
    - "requirements.txt"
    - "package.json"
    - "package-lock.json"
    - ".serverless/**"
    - ".virtualenv/**"
    - "node_modules/**"

functions:
  rag:
    handler: rag.handler
    role: amazonBedrockRole
    environment:
      STAGE: ${self:provider.stage}
      PINECONE_API_KEY: ${param:PINECONE_API_KEY}
      PINECONE_ENV: ${param:PINECONE_ENV}
      OPENAI_API_KEY: ${param:OPENAI_API_KEY}
    events:
      - sns: arn:aws:sns:${aws:region}:${aws:accountId}:${self:custom.topicName}

resources:
  Resources:
    amazonBedrockRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: amazonBedrockRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: slackPublishPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:TagResource
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                -  Effect: "Allow"
                   Action:
                     - "s3:PutObject"
                   Resource:
                     Fn::Join:
                       - ""
                       - - "arn:aws:s3:::"
                         - "Ref" : "ServerlessDeploymentBucket"
                -  Effect: "Allow"
                   Action:
                     - "bedrock:*"
                   Resource:
                     - "*"
